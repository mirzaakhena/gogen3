package application

type {{CamelCase .ApplicationName}} struct {
	server.GorrilaMuxHandler
	{{CamelCase .ControllerName}}Controller {{LowerCase .ControllerName}}.Controller
	// TODO Another controller will added here ... <<<<<<
}

func New{{PascalCase .ApplicationName}}() func() RegistryContract {
	return func() RegistryContract {

        httpHandler, err := server.NewGorrilaMuxHandler(":8080")
        if err != nil {
			log.Error(context.Background(), "%v", err.Error())
			os.Exit(1)
		}

        datasource, err := gateway.New{{PascalCase .GatewayName}}Gateway()
		if err != nil {
			log.Error(context.Background(), "%v", err.Error())
			os.Exit(1)
		}

        return &{{CamelCase .ApplicationName}}{
            GorrilaMuxHandler: httpHandler,
            {{CamelCase .ControllerName}}Controller: {{LowerCase .ControllerName}}.Controller{
                Router:              httpHandler.Router.NewRoute(),
                {{PascalCase .UsecaseName}}Inport: {{LowerCase .UsecaseName}}.NewUsecase(datasource),
                // TODO another Inport will added here ... <<<<<<
            },
            // TODO another controller will added here ... <<<<<<
        }

	}
}

func (r *{{CamelCase .ApplicationName}}) SetupController() {
	r.{{CamelCase .ControllerName}}Controller.RegisterRouter()
	// TODO another router call will added here ... <<<<<<
}
