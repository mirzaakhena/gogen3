package restapi

import (
	"net/http"

	"github.com/gin-gonic/gin"

	"{{.PackagePath}}/infrastructure/log"
	"{{.PackagePath}}/infrastructure/util"
	"{{.PackagePath}}/usecase/{{LowerCase .EntityName}}delete"
)

// {{LowerCase .EntityName}}DeleteHandler ...
func (r *Controller) {{LowerCase .EntityName}}DeleteHandler(inputPort {{LowerCase .EntityName}}delete.Inport) gin.HandlerFunc {

	type request struct {
	}

	type response struct {
	}

	return func(c *gin.Context) {

		traceID := util.GenerateID()

		ctx := log.Context(c.Request.Context(), traceID)

		//var jsonReq request
		//if err := c.BindJSON(&jsonReq); err != nil {
		//	log.Error(ctx, err.Error())
		//	c.JSON(http.StatusBadRequest, NewErrorResponse(err, traceID))
		//	return
		//}

		var req {{LowerCase .EntityName}}delete.InportRequest
		req.ID = c.Param("{{LowerCase .EntityName}}id")

		log.Info(ctx, util.MustJSON(req))

		res, err := inputPort.Execute(ctx, req)
		if err != nil {
			log.Error(ctx, err.Error())
			c.JSON(http.StatusBadRequest, NewErrorResponse(err, traceID))
			return
		}

		var jsonRes response
		_ = res

		log.Info(ctx, util.MustJSON(jsonRes))
		c.JSON(http.StatusOK, NewSuccessResponse(jsonRes, traceID))

	}
}
