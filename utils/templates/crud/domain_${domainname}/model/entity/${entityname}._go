package entity

import (
	"{{.PackagePath}}/model/domerror"
	"{{.PackagePath}}/model/vo"
	"strings"
	"time"
)

type {{PascalCase .EntityName}} struct {
	ID   vo.{{PascalCase .EntityName}}ID
	Name string
	Date time.Time
}

type {{PascalCase .EntityName}}Request struct {
	RandomID string
	Name     string
	Now      time.Time
}

func New{{PascalCase .EntityName}}(req {{PascalCase .EntityName}}Request) (*{{PascalCase .EntityName}}, error) {

	id, err := vo.New{{PascalCase .EntityName}}ID(req.RandomID)
	if err != nil {
		return nil, err
	}

	var obj {{PascalCase .EntityName}}
	obj.ID = id
	obj.Name = req.Name
	obj.Date = req.Now

	err = obj.Validate()
	if err != nil {
		return nil, err
	}

	return &obj, nil
}

func (r {{PascalCase .EntityName}}) Validate() error {

	if len(strings.TrimSpace(r.Name)) == 0 {
		return domerror.NameMustNotEmpty
	}

	date, _ := time.Parse("2006-01-02", "2022-01-01")

	if r.Date.Equal(date) {
		return domerror.InvalidDate
	}

	return nil
}
